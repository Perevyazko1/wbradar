{"version":3,"file":"static/js/403.711a56b8.chunk.js","mappings":"wLACA,QAA0B,0B,aCA1B,SAAgB,OAAS,uBAAuB,UAAY,0BAA0B,WAAa,4B,aCY5F,MAAMA,GAASC,EAAAA,EAAAA,OAAMC,IACxB,MAAM,UACFC,EAAS,SACTC,EAAQ,UACRC,EAAS,SACTC,EAAQ,WACRC,KACGC,GACHN,EAIJ,OACIO,EAAAA,EAAAA,MAAA,OACIN,WAAWO,EAAAA,EAAAA,GAAWC,EAAIX,OAJf,CAAC,EAI4B,CAACG,OACrCK,EAAUJ,SAAA,EAEdQ,EAAAA,EAAAA,KAAA,OAAKT,UAAWQ,EAAIN,UAAWQ,IAAKR,KACpCI,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACIQ,EAAAA,EAAAA,KAAA,OAAKT,UAAWQ,EAAIL,SAASF,SAAEE,KAC/BM,EAAAA,EAAAA,KAAA,OAAKT,UAAWQ,EAAIJ,WAAWH,SAAEG,SAEnC,ICiCd,GApDiBN,EAAAA,EAAAA,OAAMC,IACnB,MAAM,UACFC,EAAS,SACTC,KACGI,GACHN,GAWGY,KAAMC,EAAUC,UAAWC,EAAeC,MAAOC,GAAaC,EAAAA,EAAQC,gBAAgB,CAACC,MAAO,GAAIC,MAAO,KACzGT,KAAMU,EAAaR,UAAWS,EAAkBP,MAAOQ,GAAgBN,EAAAA,EAAQO,mBAAmB,CACrGL,MAAO,GACPC,MAAO,IAIX,OACId,EAAAA,EAAAA,MAACmB,EAAAA,EAAW,CAAAxB,SAAA,EACRK,EAAAA,EAAAA,MAAA,OACIN,WAAWO,EAAAA,EAAAA,GAAW,GAnBf,CAAC,EAmBwB,CAACP,OAC7BK,EAAUJ,SAAA,EAEdQ,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,SAAUC,EAAAA,EAAWC,OArBzB,CACX,4UACA,4RACA,0LACA,2JACA,sMACA,gMAeoDC,UAAW,MAAOC,MAAO,+CACpE9B,MAELQ,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAChC,UAAWQ,EAAayB,cAAc,EAAMC,UAAU,EAAKjC,SAC5DoB,GAAeA,EAAYc,KAAIC,IAC5B,MAAMC,EAAe,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,MAAKD,GAAQA,EAAKE,KAAOH,EAAQG,KAClDpC,EAAWkC,EAAOA,EAAKG,KAAO,eAEpC,OACI/B,EAAAA,EAAAA,KAAA,OAAAR,UACIQ,EAAAA,EAAAA,KAACZ,EAAM,CACHK,UAAW,qDACXC,SAAUA,EACVC,WAAYgC,EAAQK,QAJlBL,EAAQG,GAMZ,QAKZ,G","sources":["webpack://wbradar/./src/pages/MainPage/ui/MainPage.module.scss?45b5","webpack://wbradar/./src/widgets/Review/Review.module.scss?d820","widgets/Review/Review.tsx","pages/MainPage/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"carusel\":\"MainPage_carusel__0cyBe\"};","// extracted by mini-css-extract-plugin\nexport default {\"Review\":\"Review_Review__p7O+H\",\"userPhoto\":\"Review_userPhoto__LmnhA\",\"cardReview\":\"Review_cardReview__EEYI8\"};","import {memo, ReactNode} from 'react';\nimport {classNames, Mods} from \"shared/lib/classNames/classNames\";\nimport cls from \"./Review.module.scss\"\ninterface ReviewProps {\n    className?: string\n    children?: ReactNode\n    userPhoto :string\n    userName: string\n    reviewText: string\n\n}\n\n\nexport const Review = memo((props: ReviewProps) => {\n    const {\n        className,\n        children,\n        userPhoto,\n        userName,\n        reviewText,\n        ...otherProps\n    } = props\n\n    const mods: Mods = {};\n\n    return (\n        <div\n            className={classNames(cls.Review, mods, [className])}\n            {...otherProps}\n        >\n            <img className={cls.userPhoto} src={userPhoto}/>\n            <div>\n                <div className={cls.userName}>{userName}</div>\n                <div className={cls.reviewText}>{reviewText}</div>\n            </div>\n        </div>\n    );\n});","import {memo, ReactNode} from 'react';\nimport {classNames, Mods} from \"shared/lib/classNames/classNames\";\nimport {PageWrapper} from \"shared/ui/PageWrapper/PageWrapper\";\nimport Chart from \"widgets/Chart/Chart\";\nimport {saleChart} from \"entity/SaleChart\"\nimport {Carousel} from \"react-responsive-carousel\";\nimport cls from \"./MainPage.module.scss\"\nimport {postApi} from \"shared/api/RtkService\";\nimport {Review} from \"widgets/Review/Review\";\n\ninterface MainPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nconst MainPage = memo((props: MainPageProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n    const mods: Mods = {};\n    const labels = [\n        'центральный федеральный округ приволжский федеральный округ',\n        'южный федеральный округ сибирский федеральный округ',\n        'северо-западный федеральный округ',\n        'уральский федеральный округ',\n        'северо-кавказский федеральный округ',\n        'дальневосточный федеральный округ'\n    ]\n    const {data: dataUser, isLoading: isLoadingUser, error: errorUser} = postApi.useGetDataQuery({limit: 10, start: 0})\n    const {data: dataComment, isLoading: isLoadingComment, error: errorComment} = postApi.useGetCommentQuery({\n        limit: 10,\n        start: 0\n    })\n\n\n    return (\n        <PageWrapper>\n            <div\n                className={classNames('', mods, [className])}\n                {...otherProps}\n            >\n                <Chart datasets={saleChart} labels={labels} typeChart={\"bar\"} label={\"Продажи\"}/>\n                {children}\n            </div>\n            <Carousel className={cls.carusel} infiniteLoop={true} autoPlay={true}>\n                    {dataComment && dataComment.map(comment => {\n                        const user = dataUser?.find(user => user.id === comment.id);\n                        const userName = user ? user.name : \"Unknown User\";\n\n                        return (\n                            <div key={comment.id}>\n                                <Review\n                                    userPhoto={\"https://hornews.com/upload/images/blank-avatar.jpg\"}\n                                    userName={userName}\n                                    reviewText={comment.body}\n                                />\n                            </div>\n                        );\n                    })}\n\n            </Carousel>\n        </PageWrapper>\n    );\n});\nexport default MainPage"],"names":["Review","memo","props","className","children","userPhoto","userName","reviewText","otherProps","_jsxs","classNames","cls","_jsx","src","data","dataUser","isLoading","isLoadingUser","error","errorUser","postApi","useGetDataQuery","limit","start","dataComment","isLoadingComment","errorComment","useGetCommentQuery","PageWrapper","Chart","datasets","saleChart","labels","typeChart","label","Carousel","infiniteLoop","autoPlay","map","comment","user","find","id","name","body"],"sourceRoot":""}